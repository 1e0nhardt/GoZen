import os

from build_ffmpeg import build_ffmpeg


num_jobs = ARGUMENTS.get('jobs', 4)

env = SConscript("../godot_cpp/SConstruct")
env.Append(CPPPATH=["src/"])


# Determine the platform and set the appropriate link flags
platform = ARGUMENTS.get('platform', 'Linux')
use_mingw = ARGUMENTS.get('use_mingw', 'no')
if platform == "linux": # Linux
    print("Linux system detected")
    env.Append(LIBS=["avcodec", "avformat", "avfilter", "avdevice", "avutil", "swscale", "swresample"])
elif platform == "windows": # Windows
    print("Windows system detected")
    # Adding libraries for building
    build_ffmpeg(num_jobs)
    env.Append(CPPPATH=["ffmpeg-bin/include"])
    env.Append(LIBPATH=["ffmpeg-bin/bin"])
    env.Append(LIBS=["avcodec", "avformat", "avfilter", "avdevice", "avutil", "swscale", "swresample"])
    if use_mingw == "no":
        env.Append(LINKFLAGS=["avcodec.lib", "avformat.lib", "avfilter.lib", "avdevice.lib", "avutil.lib", "swscale.lib", "swresample.lib"])
elif platform == "macos": # MacOS - TODO: not working
    print("Mac system detected")
    env.Append(LIBS=["libavcodec", "libavformat", "libavfilter", "libavdevice", "libavutil", "libswscale", "libswresample"])

src = Glob("src/*.cpp")

libpath = "../../src/bin/libgozen{}{}".format(env["suffix"], env["SHLIBSUFFIX"])
print("libpath:", libpath)


sharedlib = env.SharedLibrary(libpath, src)
Default(sharedlib)

print('-= Compiling GDExtension complete =-')
